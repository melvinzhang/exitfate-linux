#==============================================================================
# ** Scene_MenuStyle
#------------------------------------------------------------------------------
# Menu style changing screen
#==============================================================================

class Scene_MenuStyle
  #--------------------------------------------------------------------------
  # * Main Processing
  #--------------------------------------------------------------------------
  def main
    # Make title graphic
    @sprite = Sprite.new
    @sprite.bitmap = RPG::Cache.picture("Backgrounds/Menu" + $game_system.windowskin_id.to_s)    
    @label_window = Window_Label.new("Menu Style")
    @old_id = $game_system.windowskin_id
    @styles = []
    style_names = []
    c = 0
    for i in 130..139
      if $game_party.item_number(i) > 0
        @styles.push(i - 129)
        style_names.push($data_items[i].description)
        if $game_system.windowskin_id == i - 129
          @selected_index = c
        end
        c += 1
      end
    end
    @styles_window = Window_Command.new(200, style_names)
    @styles_window.x = 75
    @styles_window.y = 65
    @styles_window.index = @selected_index
    @help_window = Window_Help.new
    @help_window.set_text("What style do you want your menus to be?")
    # Execute transition
    Graphics.transition
    # Main loop
    loop do
      # Update game screen
      Graphics.update
      # Update input information
      Input.update
      # Frame update
      update
      # Abort loop if screen is changed
      if $scene != self
        break
      end
    end
    # Prepare for transition
    Graphics.freeze
    # Dispose of windows
    @label_window.dispose
    @help_window.dispose
    @styles_window.dispose
    @sprite.bitmap.dispose
    @sprite.dispose
  end
  #--------------------------------------------------------------------------
  # * Frame Update
  #--------------------------------------------------------------------------
  def update
    @styles_window.update
    @label_window.update
    @help_window.update
    # If B button was pressed
    if Input.trigger?(Input::B) or Input.trigger?(Input::C)
      $game_system.se_play($data_system.cancel_se)
      $scene = Scene_Map.new
      if Input.trigger?(Input::B)
        $game_system.windowskin_id = @old_id
      end
      return
    end
    if @selected_index != @styles_window.index
      @selected_index = @styles_window.index
      $game_system.windowskin_id = @styles[@selected_index]
      @sprite.bitmap .dispose
      @sprite.bitmap = RPG::Cache.picture("Backgrounds/Menu" + $game_system.windowskin_id.to_s)    
    end
  end
end