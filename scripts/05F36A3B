#==============================================================================
# ** Sprite_Card
#------------------------------------------------------------------------------
#  Sprite of a Blackjack card
#==============================================================================

class Sprite_Card < Sprite
  #--------------------------------------------------------------------------
  # * Object Initialization
  #
  #--------------------------------------------------------------------------
  def initialize(card, front_turned, target_x, y, z)
    super()
    @card = card
    @front_turned = front_turned
    @target_x = target_x
    self.x = 750
    self.y = y
    self.z = z
    draw
    update    
  end
  #--------------------------------------------------------------------------
  # * Dispose
  #--------------------------------------------------------------------------
  def dispose
    if self.bitmap != nil
      self.bitmap.dispose
    end
    super
  end
  #--------------------------------------------------------------------------
  # * Set front turned
  #--------------------------------------------------------------------------
  def front_turned=(f)    
    @front_turned = f
    draw
  end
  #--------------------------------------------------------------------------
  # * Draw picture
  #--------------------------------------------------------------------------
  def draw
    if not @front_turned
      self.bitmap = RPG::Cache.picture("Cards/Card_Back")
    else
      self.bitmap = RPG::Cache.picture("Cards/Card_" + @card.suit.to_s + "_" +@card.number_string)
    end
  end
  #--------------------------------------------------------------------------
  # * Is still moving?
  #--------------------------------------------------------------------------
  def is_moving?
    return (self.x > @target_x)
  end
  #--------------------------------------------------------------------------
  # * Frame Update
  #--------------------------------------------------------------------------
  def update
    super
    if self.x > @target_x
      self.x -= 45
      if self.x < @target_x
        self.x == @target_x
      end
    end
  end
end
