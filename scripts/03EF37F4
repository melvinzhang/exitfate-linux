#==============================================================================
# ** Scene_WarSetup
#------------------------------------------------------------------------------
# War battle setup screen
#==============================================================================

class Scene_WarSetup
  #--------------------------------------------------------------------------
  # * Main Processing
  #--------------------------------------------------------------------------
  def main
    # Make title graphic
    @sprite = Sprite.new
    @sprite.bitmap = RPG::Cache.picture("Backgrounds/Menu" + $game_system.windowskin_id.to_s)    
    @label_window = Window_Label.new("War Setup")
    @help_window = Window_Help.new
    # Make command window
    s = []
    s.push("Change Unit Members")
    s.push("Clear Unit Members")
    s.push("Change Unit Type")
    @command_window = Window_Command.new(250, s)
    @command_window.y = 75
    @command_window.windowskin_suffix = "_left"
    @command_window.index = 0
    @command_window.active = true
    # Make command window
    @yesno_window = Window_Command.new(100, ["Yes", "No"])
    @yesno_window.x = 320-50
    @yesno_window.y = 100
    @yesno_window.index = 0
    @yesno_window.active = false
    @yesno_window.visible = false
    # Create list of available units
    @unit_index = 0    
    @unit_list = []
    for i in 1...$data_warleaders.size
      l = $data_warleaders[i]
      if $game_actors[l.required_char].selectable
        @unit_list.push(i)
      end      
    end
    @unit_window = Window_WarSetupUnit.new(@unit_list[0])
    @unit_window.visible = false    
    @unit_member_window = Window_WarSetupMember.new
    @unit_member_window.visible = false
    update_unit_member_window
    @member_window = Window_WarSetupList.new
    @member_window.visible = false
    @member_window.active = false
    @member_window.index = -1
    refresh_member_list    
    @member_window.list = @member_list
    @member_title_window = Window_Base_Short.new(320, 50-32, 320, 48)
    @member_title_window.set_standard_bitmap
    @member_title_window.contents.font.color = @member_title_window.system_color
    @member_title_window.draw_text(16+4, 12, 200, 24, "Name")
    @member_title_window.draw_text(16+90, 12, 50, 24, "Men", 2)
    @member_title_window.draw_text(16+135, 12, 45 ,24, "Atk", 2)
    @member_title_window.draw_text(16+185, 12, 45, 24, "Def", 2) 
    @member_title_window.visible = false
    # Create icons
    @leader_icons = []
    y = 75
    for u in @unit_list
      icon = Sprite_WarSetupLeader.new(u)
      icon.visible = false
      icon.x = 5
      icon.y = y
      @leader_icons.push(icon)
      y += 25
    end    
    @leader_icons[@unit_index].selected = true
    # Other windows
    @type_window = Window_WarSetupType.new
    @type_window.help_window = @help_window
    @type_window.id = @unit_list[@unit_index]
    @type_window.active = false
    @type_window.visible = false
    @type_stat_window = Window_Base.new(@type_window.x,
                          @type_window.y + @type_window.height + 16, @type_window.width, 84)
    @type_stat_window.set_standard_bitmap
    @type_stat_window.visible = false
    @type_window.stat_window = @type_stat_window
    # Execute transition
    Graphics.transition
    # Main loop
    loop do
      # Update game screen
      Graphics.update
      # Update input information
      Input.update
      # Frame update
      update
      # Abort loop if screen is changed
      if $scene != self
        break
      end
    end
    # Prepare for transition
    Graphics.freeze
    # Dispose of windows
    for icon in @leader_icons
      icon.dispose
    end
    @member_window.dispose
    @member_title_window.dispose
    @unit_member_window.dispose
    @command_window.dispose
    @type_window.dispose
    @type_stat_window.dispose
    @unit_window.dispose
    @help_window.dispose
    @label_window.dispose
    @sprite.bitmap.dispose
    @sprite.dispose
  end
  #--------------------------------------------------------------------------
  # * Frame Update
  #--------------------------------------------------------------------------
  def update
    @command_window.update
    @type_window.update
    @unit_window.update
    @member_window.update
    @yesno_window.update
    if @command_window.active
      update_command
      return
    elsif @type_window.active
      update_type_window
    elsif @member_window.active
      update_member_window
    elsif @command_window.index == 0
      update_change_members
    elsif @command_window.index == 1
      update_clear_members
    elsif @command_window.index == 2
      update_change_type
    end
  end
  #--------------------------------------------------------------------------
  # * Update (Change members window)
  #--------------------------------------------------------------------------
  def update_member_window    
    # Set help window text
    i = @member_window.index
    if i >= @member_list.size
      newmem = 0
      t = ""
    else
      newmem = @member_list[i]
      m = $data_warmembers[newmem]
      t = m.ability > 0 ? 
                $data_war_ability_names[m.ability] + ": " + $data_war_ability_desc[m.ability]  :
                ""
    end    
    @help_window.set_text(t)
    # If B button was pressed
    if Input.trigger?(Input::B)
      $game_system.se_play($data_system.cancel_se)
      @unit_window.active = true
      @member_window.active = false
      @member_window.index = 0
      @member_window.index = -1
    end
    # If C button was pressed
    if Input.trigger?(Input::C)
      # Change member
      $game_system.se_play($data_system.decision_se)
      $game_party.war_units[@unit_list[@unit_index]][1][@unit_window.index] = newmem
      @unit_window.refresh
      refresh_member_list
      @member_window.list = @member_list
      update_unit_member_window
      @unit_window.active = true
      @member_window.active = false
      @member_window.index = 0
      @member_window.index = -1
    end   
  end
  #--------------------------------------------------------------------------
  # * Update (Change members)
  #--------------------------------------------------------------------------
  def update_change_members
    update_unitlist
    # Change member index
    if Input.repeat?(Input::LEFT)
      $game_system.se_play($data_system.cursor_se)
      @unit_window.index = (@unit_window.index - 1) % 3
      update_unit_member_window
    end
    if Input.repeat?(Input::RIGHT)
      $game_system.se_play($data_system.cursor_se)
      @unit_window.index = (@unit_window.index + 1) % 3
      update_unit_member_window
    end    
    @help_window.set_text("Change the members of your units")
    # If B button was pressed
    if Input.trigger?(Input::B)
      $game_system.se_play($data_system.cancel_se)
      @command_window.active = true
      @command_window.visible = true
      @unit_window.visible = false
      @unit_window.index = -1
      @member_window.visible = false
      @member_title_window.visible = false
      @unit_member_window.visible = false
      for icon in @leader_icons
        icon.visible = false
      end
      return
    end
    # If C button was pressed
    if Input.trigger?(Input::C)
      $game_system.se_play($data_system.decision_se)
      @unit_window.active = false
      @member_window.active = true
      @member_window.index = 0
      return
    end   
  end
  #--------------------------------------------------------------------------
  # * Update (Change type, type window)
  #--------------------------------------------------------------------------  
  def update_type_window
    # If B button was pressed
    if Input.trigger?(Input::B)
      $game_system.se_play($data_system.cancel_se)
      @type_window.active = false
      @type_window.index = -1
      @type_stat_window.visible = false      
      return
    end
    # If C button was pressed
    if Input.trigger?(Input::C)
      $game_system.se_play($data_system.decision_se)
      $game_party.war_units[@unit_list[@unit_index]][0] = @type_window.index + 1
      @unit_window.refresh
      return
    end   
  end
  #--------------------------------------------------------------------------
  # * Update (Change type)
  #--------------------------------------------------------------------------
  def update_change_type
    update_unitlist
    @help_window.set_text("Change the type of your units")
    # If B button was pressed
    if Input.trigger?(Input::B)
      $game_system.se_play($data_system.cancel_se)
      @command_window.active = true
      @command_window.visible = true
      @unit_window.visible = false
      @type_window.visible = false
      for icon in @leader_icons
        icon.visible = false
      end
      return
    end
    # If C button was pressed
    if Input.trigger?(Input::C)
      $game_system.se_play($data_system.decision_se)
      @type_window.active = true
      @type_stat_window.visible = true
      @type_window.index = $game_party.war_units[@unit_list[@unit_index]][0] - 1
      return
    end   
  end
  #--------------------------------------------------------------------------
  # * Update unit list
  #--------------------------------------------------------------------------
  def update_unitlist
    # If the down directional button was pressed
    if Input.repeat?(Input::DOWN)
      $game_system.se_play($data_system.cursor_se)
      @leader_icons[@unit_index].selected = false
      @unit_index = (@unit_index + 1) % @unit_list.size
      @unit_window.set_unit(@unit_list[@unit_index])
      @type_window.id = @unit_list[@unit_index]
      @leader_icons[@unit_index].selected = true
      update_unit_member_window
    end
    # If the up directional button was pressed
    if Input.repeat?(Input::UP)
      $game_system.se_play($data_system.cursor_se)
      @leader_icons[@unit_index].selected = false
      @unit_index = (@unit_index - 1) % @unit_list.size
      @unit_window.set_unit(@unit_list[@unit_index])
      @type_window.id = @unit_list[@unit_index]
      @leader_icons[@unit_index].selected = true
      update_unit_member_window
    end    
  end
  #--------------------------------------------------------------------------
  # * Update (command window)
  #--------------------------------------------------------------------------
  def update_command  
    @help_window.set_text(
        @command_window.index == 0 ? "Change the members of your units" : 
        @command_window.index == 1 ? "Clear all unit members" : "Change the type of your units"
        )
    # If B button was pressed
    if Input.trigger?(Input::B)
      $game_system.se_play($data_system.cancel_se)
      $scene = Scene_Map.new
      return
    end
    # If C button was pressed
    if Input.trigger?(Input::C)
      $game_system.se_play($data_system.decision_se)
      if @command_window.index == 1
        @command_window.active = false
        @command_window.visible = false
        @yesno_window.active = true
        @yesno_window.visible = true
        @yesno_window.index = 0
        @help_window.set_text("Are you sure you want to clear all unit members?")        
      else              
        @command_window.active = false
        @command_window.visible = false
        @unit_window.visible = true
        for icon in @leader_icons
          icon.visible = true
        end
        if @command_window.index == 0
          # Change unit members
          @unit_window.index = 0
          @unit_window.active = true
          @member_window.visible = true
          @member_title_window.visible = true
          @unit_member_window.visible = true
          update_unit_member_window
        else
          # Change unit type
          @type_window.visible = true
          update_unit_member_window
        end      
      end
      return
    end   
  end
  #--------------------------------------------------------------------------
  # * Update (clear members yesno window)
  #--------------------------------------------------------------------------
  def update_clear_members
    # If B button was pressed
    if Input.trigger?(Input::B)
      $game_system.se_play($data_system.cancel_se)
      @command_window.active = true
      @command_window.visible = true
      @yesno_window.active = false
      @yesno_window.visible = false      
      return
    end
    # If C button was pressed
    if Input.trigger?(Input::C)
      $game_system.se_play($data_system.decision_se)
      if @yesno_window.index == 0
        for unit in $game_party.war_units
          if unit != nil
            for i in 0...3
              unit[1][i] = 0
            end
          end
        end
        refresh_member_list        
        @member_window.list = @member_list
      end
      @command_window.active = true
      @command_window.visible = true
      @yesno_window.active = false
      @yesno_window.visible = false         
      return
    end   
  end
  #--------------------------------------------------------------------------
  # * Update unit member window
  #--------------------------------------------------------------------------  
  def update_unit_member_window    
    @unit_member_window.id = $game_party.war_units[@unit_list[@unit_index]][1][@unit_window.index]
  end
  #--------------------------------------------------------------------------
  # * Refresh member list
  #--------------------------------------------------------------------------
  def refresh_member_list
    @member_list = []
    for i in 1...$data_warmembers.size
      m = $data_warmembers[i]
      if $game_actors[m.required_char].selectable
        @member_list.push(i)
      end      
    end
    # Remove characters in use    
    for i in 1...$game_party.war_units.size
      unit = $game_party.war_units[i]
      for id in unit[1]
        if id != 0
          @member_list.delete(id)
        end
      end
    end
  end
end